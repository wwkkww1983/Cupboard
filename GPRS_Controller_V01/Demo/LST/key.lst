C51 COMPILER V9.52.0.0   KEY                                                               08/06/2019 19:47:14 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Output\key.obj
COMPILER INVOKED BY: F:\Program Files (x86)\KEIL_C51\C51\BIN\C51.EXE Code\key.c LARGE BROWSE NOINTPROMOTE INCDIR(.\Code;
                    -.\Code\MyPt;.\Code\MyPt\pt-1.4) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\key.lst) OBJECT(.\Output\key.obj)

line level    source

   1          /*****************************************************************************
   2            * @file       : key
   3            * @brief      : null
   4            * @note       : null
   5            * @version    : V1.0
   6            * @date       : 2017-7-18 14:16:53
   7          ******************************************************************************/
   8          
   9          //.C
  10          /*============包含标准库头文件================================================*/
  11          
  12          /*============包含非标准库头文件==============================================*/
  13          #include "m_include.h"
  14          #include "key.h"
  15          /*============文件内部 常量定义 const=========================================*/
  16          
  17          /*============文件内部 宏定义 define==========================================*/
  18          
  19          /*============文件内部 数据类型定义 typedef===================================*/
  20          
  21          
  22          /*============文件内部 局部变量定义 static====================================*/
  23          
  24          /*============文件内部 全局变量定义 extern ===================================*/
  25          Key_Struct      Key;
  26          /*============文件内部 函数原型定义 static====================================*/
  27          
  28          static uint8_t Key_Input( uint8_t num )
  29          {
  30   1      
  31   1          if( num == KEY_SET )
  32   1          {
  33   2              if( Key.Ad_Key_Value == 0 )
  34   2              {
  35   3                  return Key_Pressed;
  36   3              }
  37   2              else
  38   2              {
  39   3                  return Key_Realsed;
  40   3              }
  41   2          }
  42   1      
  43   1          return Key_Realsed;
  44   1      }
  45          
  46          static void Key_Value_Deal( void )
  47          {
  48   1      
  49   1          uint8_t i;
  50   1      
  51   1          for( i = 0; i < KEY_MAX_NUM; i++ )
  52   1          {
  53   2      
  54   2              if( ( Key.Pressed_Time[i] >= SHORT_TIME ) && ( Key.State[i] == Key_Realsed ) )
C51 COMPILER V9.52.0.0   KEY                                                               08/06/2019 19:47:14 PAGE 2   

  55   2              {
  56   3      
  57   3                  if( Key.Pressed_Time[i] < LONG1S_TIME ) //短按
  58   3                  {
  59   4                      Key.Value = i * 2 + 1;
  60   4                  }
  61   3                  else
  62   3                  {
  63   4                      Key.Value = i * 2 + 2;
  64   4                  }
  65   3      
  66   3              }
  67   2      
  68   2          }
  69   1      
  70   1      }
  71          
  72          /******************************************************************************
  73           * Function Name: Key_Scan
  74           * Description  : This function is used to read all the keys state  10ms
  75           * Arguments    : None
  76           * parameter    : None
  77           * Return Value : None
  78           ******************************************************************************/
  79          void Key_Scan( void )
  80          {
  81   1          uint8_t i;
  82   1          uint8_t Key_Input_State;
  83   1      
  84   1          //如果是触摸，则在此读取一次键值
  85   1          Key.Ad_Key_Value = P01;
  86   1      
  87   1          for( i = 0; i < KEY_MAX_NUM; i++ )
  88   1          {
  89   2              Key_Input_State = Key_Input( i );
  90   2      
  91   2              if( Key_Input_State == Key_Pressed )
  92   2              {
  93   3                  Key.Realse_cnt[i] = 0;
  94   3      
  95   3                  if( ++Key.Pressed_cnt[i] > Pressed_jitter )  //按下消抖
  96   3                  {
  97   4                      if( Key.Pressed_cnt[i] >= 0xfe )  //防止溢出
  98   4                      {
  99   5                          Key.Pressed_cnt[i] = 0xfe;
 100   5                      }
 101   4      
 102   4                      Key.State[i] = Key_Pressed;
 103   4      
 104   4                      Key.Pressed_Time[i]++;
 105   4      
 106   4                      if( Key.Pressed_Time[i] >= 0xfe )  //防止溢出
 107   4                      {
 108   5                          Key.Pressed_Time[i] = 0xfe;
 109   5                      }
 110   4      
 111   4      
 112   4                  }
 113   3              }
 114   2              else
 115   2              {
 116   3                  Key.Pressed_cnt[i] = 0;
C51 COMPILER V9.52.0.0   KEY                                                               08/06/2019 19:47:14 PAGE 3   

 117   3      
 118   3                  if( ++Key.Realse_cnt[i] > Release_jitter )
 119   3                  {
 120   4      
 121   4                      Key.State[i] = Key_Realsed;
 122   4      
 123   4                      if( Key.Realse_cnt[i] >= 0xfe )  //防止溢出
 124   4                      {
 125   5                          Key.Realse_cnt[i] = 0xfe;
 126   5                      }
 127   4      
 128   4                      Key_Value_Deal();//识别按键类型
 129   4      
 130   4                      Key.Pressed_Time[i] = 0;
 131   4      
 132   4                  }
 133   3              }
 134   2          }
 135   1      
 136   1      }
 137          
 138          
 139          
 140          /*****************************************************************************
 141            * @name       : key_value_for_mode
 142            * @brief      : 该模式下，键值的处理
 143            * @note       : null
 144            * @param      : null
 145            * @retval     : null
 146            * @date       : 2017-7-20 15:39:46
 147          ******************************************************************************/
 148          void key_value_for_mode( void )
 149          {
 150   1      
 151   1          switch( Key.Value )
 152   1          {
 153   2      
 154   2              case KEY_SET_SHORT:
 155   2              {
 156   3      
 157   3                  break;
 158   3              }
 159   2      
 160   2              case KEY_SET_LONG1S:
 161   2              {
 162   3      
 163   3                  break;
 164   3              }
 165   2      
 166   2      
 167   2              default:
 168   2                  break;
 169   2      
 170   2          }
 171   1      
 172   1          Key.Value = 0x00; //按键清零
 173   1      
 174   1      }
 175          
 176          
 177          
 178          
C51 COMPILER V9.52.0.0   KEY                                                               08/06/2019 19:47:14 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    324    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
